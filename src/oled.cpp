# include <wire.h>
# include <Adafruit_GFX.h>
# include <Adafruit_SSD1306.h>

static const unsigned char PROGMEM gassolina[] = 
{
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0f, 0x0c, 0x20, 0x20, 0x78, 0x7c, 0x18, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x20, 0x20, 0xc0, 0x66, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x1c, 0x0c, 0x20, 0x21, 0x80, 0xc6, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0e, 0x0c, 0x20, 0x21, 0x80, 0xc6, 0x1a, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x20, 0x21, 0x80, 0xc6, 0x1b, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x13, 0x0c, 0x30, 0x20, 0xf8, 0x6e, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x1e, 0x08, 0x3c, 0x20, 0x78, 0x38, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM upload[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xf0, 0x00, 
  0x00, 0x07, 0xfc, 0x00, 
  0x00, 0x0f, 0xfe, 0x00, 
  0x00, 0x0f, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0x00, 
  0x03, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0x80, 
  0x07, 0xff, 0xff, 0x80, 
  0x1f, 0xfe, 0x7f, 0xf0, 
  0x1f, 0xfc, 0x3f, 0xf8, 
  0x3f, 0xf8, 0x1f, 0xf8, 
  0x3f, 0xf0, 0x0f, 0xfc, 
  0x3f, 0xf0, 0x0f, 0xfc, 
  0x3f, 0xfc, 0x3f, 0xfc, 
  0x3f, 0xfc, 0x3f, 0xfc, 
  0x1f, 0xfc, 0x3f, 0xf8, 
  0x0f, 0xfc, 0x3f, 0xf0, 
  0x07, 0xfc, 0x3f, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM upload_logo[] = 
{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x03, 0xe0, 
    0x0f, 0xf0, 
    0x1f, 0xf0, 
    0x3f, 0xf8, 
    0x7e, 0x7e, 
    0x7c, 0x3e, 
    0x7e, 0x7e, 
    0x3e, 0x7c, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
};

static const unsigned char PROGMEM Wifi_logo[] =
{           
  0x00, 0x40,//       #      
  0x03, 0x18,//    ##   ##    
  0x04, 0x04,//   #       #   
  0x08, 0x42,//  #    #    # 
  0x10, 0xe1,// #    ###    # 
  0x01, 0x10,//     #   #    
  0x02, 0x08,//    #     #   
  0x00, 0x40,//       #      
  0x00, 0xa0,//      # #     
  0x00, 0x70,//       #      
  0x00, 0x00,
  0x00, 0x00,
  0x00, 0x00,
  0x00, 0x00,
  0x00, 0x00,
  0x00, 0x00
};

static const unsigned char PROGMEM bluetooth_logo[] =
{
//     ##     
//     #  #  
//     #   #
// #   #   #
//  #  #  # 
//   # # #   
//    ###    
//   # # #
//  #  #  #
// #   #   #
//     #   #
//     #  #
//     ##

  0x00, 0x18,
  0x00, 0x12,
  0x00, 0x11,
  0x01, 0x11,
  0x00, 0x92, 
  0x00, 0x54, 
  0x00, 0x38,
  0x00, 0x54,
  0x00, 0x92,
  0x01, 0x11,
  0x00, 0x11,
  0x00, 0x12,
  0x00, 0x18,
  0x00, 0x00,
  0x00, 0x00,
  0x00, 0x00
};

static const unsigned char BATTERY_FULL_bits[] PROGMEM = {
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x7F, 0xFF,
  0x40, 0x01, 
  0x5F, 0xFD, 
  0x5F, 0xFD, 
  0xDF, 0xFD, 
  0xDF, 0xFD, 
  0x5F, 0xFD,  
  0x5F, 0xFD,
  0x40, 0x01, 
  0x7F, 0xFF, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00, 
};

static const unsigned char BATTERY_3_4_bits[] PROGMEM = {
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,  
  0x7F, 0xFF,
  0x40, 0x01, 
  0x43, 0xFD, 
  0x43, 0xFD, 
  0xC3, 0xFD, 
  0xC3, 0xFD, 
  0x43, 0xFD,  
  0x43, 0xFD,
  0x40, 0x01,  
  0x7F, 0xFF, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00, 
};

static const unsigned char BATTERY_HALF_bits[] PROGMEM = {
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,  
  0x7F, 0xFF,
  0x40, 0x01, 
  0x40, 0x7D, 
  0x40, 0x7D, 
  0xC0, 0x7D, 
  0xC0, 0x7D, 
  0x40, 0x7D,  
  0x40, 0x7D,
  0x40, 0x01,  
  0x7F, 0xFF, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,
};

static const unsigned char BATTERY_1_4_bits[] PROGMEM = {

  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,  
  0x7F, 0xFF,
  0x40, 0x01, 
  0x40, 0x0D, 
  0x40, 0x0D, 
  0xC0, 0x0D, 
  0xC0, 0x0D, 
  0x40, 0x0D,  
  0x40, 0x0D,
  0x40, 0x01,  
  0x7F, 0xFF, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,
};

static const unsigned char BATTERY_EMPTY_bits[] PROGMEM = {
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,  
  0x7F, 0xFF,
  0x40, 0x01, 
  0x40, 0x01, 
  0x40, 0x01, 
  0xC0, 0x01, 
  0xC0, 0x01, 
  0x40, 0x01,  
  0x40, 0x01,
  0x40, 0x01,  
  0x7F, 0xFF, 
  0x00, 0x00, 
  0x00, 0x00, 
  0x00, 0x00,
};

Adafruit_SSD1306* initOled() {
    Adafruit_SSD1306* display = new Adafruit_SSD1306(128, 64, &Wire, -1);

    if (!(*display).begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
        Serial.println(F("SSD1306 allocation failed"));
    }
    display->clearDisplay();
    display->setTextSize(3);
    display->setTextColor(SSD1306_WHITE);
    display->setCursor(10, 30);
    display->println("RYSERA");
    display->display();
    delay(1000);
    display->clearDisplay();
    display->drawBitmap(0, 0, gassolina, 128, 64, SSD1306_WHITE);
    display->display();
    return display;
}

Adafruit_SSD1306* clearOled(Adafruit_SSD1306* display) {
    display->clearDisplay();
    display->display();
    return display;
}

Adafruit_SSD1306* displaynavbar(Adafruit_SSD1306* display, int* status_arr) {
    display->drawLine(0, 20, 128, 20, SSD1306_WHITE);
    if(status_arr[0] == 1) display->drawBitmap(2, 2, bluetooth_logo, 16, 16, SSD1306_WHITE);
    if(status_arr[1] == 1) display->drawBitmap(25, 3, Wifi_logo, 16, 16, SSD1306_WHITE);
    if(status_arr[3] == 1) display->drawBitmap(50, 3, upload_logo, 16, 16, SSD1306_WHITE);

    if(status_arr[2] == 5) display->drawBitmap(100, 3, BATTERY_FULL_bits, 16, 16, SSD1306_WHITE);
    else if(status_arr[2] == 4) display->drawBitmap(100, 3, BATTERY_3_4_bits, 16, 16, SSD1306_WHITE);
    else if(status_arr[2] == 3) display->drawBitmap(100, 3, BATTERY_HALF_bits, 16, 16, SSD1306_WHITE);
    else if(status_arr[2] == 2) display->drawBitmap(100, 3, BATTERY_1_4_bits, 16, 16, SSD1306_WHITE);
    else if(status_arr[2] == 1) display->drawBitmap(100, 3, BATTERY_EMPTY_bits, 16, 16, SSD1306_WHITE);
    return display;
}

Adafruit_SSD1306* displayWeight(Adafruit_SSD1306* display, String text, int* status_arr) {
    display->clearDisplay();
    display = displaynavbar(display, status_arr);
    display->setTextSize(1);
    display->setTextColor(SSD1306_WHITE);
    display->setCursor(0, 25);
    display->println("Weight:");
    display->setCursor(0, 40);
    display->setTextSize(2);
    display->print(text);
    display->print("kg");
    display->display();
    return display;
}

Adafruit_SSD1306* displayStatus(Adafruit_SSD1306* display, String text) {
    display->clearDisplay();
    display->setTextSize(1);
    display->setTextColor(SSD1306_WHITE);
    display->setCursor(0, 5);
    display->print(text);
    display->display();
    return display;
}

Adafruit_SSD1306* displayUpload (Adafruit_SSD1306* display, int* status_arr) {
    display->clearDisplay();
    display = displaynavbar(display, status_arr);
    display->drawBitmap(48, 25, upload, 32, 32, SSD1306_WHITE);
    display->display();
    return display;
}

void OledOff(Adafruit_SSD1306* display) {
    display -> clearDisplay();
    display->ssd1306_command(SSD1306_DISPLAYOFF);
    display->ssd1306_command(SSD1306_CHARGEPUMP);
    display->ssd1306_command(0x10);
    delete display;
    display = nullptr;
}
